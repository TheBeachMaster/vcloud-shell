function api_command_vdc_vAppTemplate_ovf()
{
	vsh_message INFO "api $api_format ${FUNCNAME[0]:12} $@"
	if [ $# -ne 3 ]; then
		vsh_message FAIL "api $api_format ${FUNCNAME[0]:12} requires <orgName> <vdcName> <vAppTemplateName>"
	fi
	
	local -r orgName="$1"
	local -r vdcName="$2"
	local -r vAppTemplateName="$3"
	
	local -r key="${FUNCNAME[0]:12}_${orgName}_${vdcName}_${vAppTemplateName}"
	local -r value="${api_downloadsCache["${key}"]}"
	if [ -n "$value" ]; then
		local curl_downloadFilePath="$value"
	else
		function api_callback_fromMimeTypeAndName_api_command_vdc_vAppTemplate_ovf()
		{
			api_callback_fromNameAndMimeType "$@" "application/vnd.vmware.vcloud.vAppTemplate+xml"
			foundHref="${foundHref}"/ovf
		}
		local curl_downloadFilePath
		api_call_get links-resource-entities api_callback_fromMimeTypeAndName_api_command_vdc_vAppTemplate_ovf api_callback_test_fromNameAndMimeType vAppTemplate "$vAppTemplateName" '' \
			api_command_vdc "$orgName" "$vdcName"
		api_call_cacheDownload
	fi
	
	api_call_recordDownload
	api_format_${FUNCNAME[0]:12}
}

function api_format_vdc_vAppTemplate_ovf()
{
	local -r prefix="${FUNCNAME[0]:11}"
	case "$api_format" in
		
		none)
			:
		;;
		
		xml)
			cat "$curl_downloadFilePath"
		;;
		
		*)
			vsh_message FAIL "Please specify api_format as xml, not $api_format"
		;;
		
	esac
}
