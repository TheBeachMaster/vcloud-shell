function api_callback_setFound()
{
	foundHref="$href"
	foundMimeType="$mimeType"
	foundName="$name"
	foundRel="$rel"
}

# href, mimeType, name and rel are available
function api_callback_test_fromName()
{
	test "$name" = "$resourceName"
}

# href, mimeType, name and rel are available
function api_callback_test_fromMimeType()
{
	test "$mimeType" = "$resourceMimeType"
}

# href, mimeType, name and rel are available
function api_callback_test_fromRel()
{
	test "$rel" = "$resourceRel"
}

# href, mimeType, name and rel are available
function api_callback_test_fromNameAndMimeType()
{
	if [ "$name" = "$resourceName" ]; then
		if [ "$mimeType" = "$resourceMimeType" ]; then
			return 0
		fi
		return 1
	fi
	return 1
}




# the Link rel=remove is an earlier sibling to the Key value and has a non-unique mime-type and no name, so we can't just find it by simple query
# This technique constructs the URL in violation of the API design
function api_callback_fromMimeTypeAndModifyWithKeyName()
{
	api_callback_fromMimeType "$@"
	
	foundHref="${foundHref}"/"$(url_encodePathPiece "$keyName")"
}

function api_callback_fromName()
{
	local -r testCallback="$1"
	local -r linksTsvFile="$2"
	local -r resourceKind="$3"
	local -r resourceName="$4"
	
	local href mimeType name
	local rel=""
	while IFS=$'\x01' read -r href mimeType name
	do
		if $testCallback; then
			api_callback_setFound
			return 0
		fi
	done <"$linksTsvFile"
	
	api_callback_failed
}

function api_callback_fromMimeType()
{
	local -r testCallback="$1"
	local -r linksTsvFile="$2"
	local -r resourceKind="$3"
	local -r resourceMimeType="$4"
	
	local href mimeType rel
	local name=""
	while IFS=$'\x01' read -r href mimeType rel
	do
		if $testCallback; then
			api_callback_setFound
			return 0
		fi
	done <"$linksTsvFile"
	
	api_callback_failed
}

function api_callback_fromRel()
{
	local -r testCallback="$1"
	local -r linksTsvFile="$2"
	local -r resourceKind="$3"
	local -r resourceRel="$4"
	
	local href mimeType rel
	local name=""
	while IFS=$'\x01' read -r href mimeType rel
	do
		if $testCallback; then
			api_callback_setFound
			return 0
		fi
	done <"$linksTsvFile"
	
	api_callback_failed
}

function api_callback_fromNameAndMimeType
{
	local -r testCallback="$1"
	local -r linksTsvFile="$2"
	local -r resourceKind="$3"
	local -r resourceName="$4"
	local -r resourceMimeType="$5"
	
	local href mimeType name
	local rel=""
	while IFS=$'\x01' read -r href mimeType name
	do
		if $testCallback; then
			api_callback_setFound
			return 0
		fi
	done <"$linksTsvFile"
	
	api_callback_failed
}

function api_callback_failed()
{
	informationMessage FAIL "Could not find $resourceKind name $resourceName in ${FUNCNAME[*]}"
}
