main_functions=()

function main_registerTrapHandlers()
{
	trapHandlers_addNext temporaryFiles_removeAll
}
main_functions+=(main_registerTrapHandlers)

function main_loadDefaults()
{
	# /etc/"$ourName"
	local defaultsFile="$switch_configPath"/defaults
	if [ -r "$defaultsFile" ]; then
		source "$defaultsFile"
	fi
	
	local -r defaultsFolder="$switch_configPath"/defaults.d
	if [ -d "$defaultsFolder" ]; then
		pushd "$defaultsFolder" 1>/dev/null 2>/dev/null
			
			for defaultsFile in *.defaults
			do
				if [ -f "$defaultsFile" ]; then
					source "$defaultsFile"
				fi
			done
			
		popd 1>/dev/null 2>/dev/null
	fi
}
main_functions+=(main_loadDefaults)

function main_validateDefault()
{
	local -r variableName="$1"
	
	if [ -z "${!variableName}" ]; then
		informationMessage FAIL "Default $variableName has no value"
	fi
}

function main_validateDefaults()
{
	main_validateDefault switch_baseUrl
	main_validateDefault defaults_api_version
	main_validateDefault defaults_curl_userAgent
	main_validateDefault defaults_curl_maxRedirs
	main_validateDefault defaults_curl_retries
}
main_functions+=(main_validateDefaults)

main_functions+=(dependency_installDependencies)

function main_login()
{
	api_versions
	
	api_sessions
	
	trapHandlers_addNext api_logout
}
main_functions+=(main_login)

main_format=xml
function main_executeCommands()
{
	# Uses a subshell so we don't affect the core program
	(
		declare -a captures=()
		declare -a downloads=()
		
		declare -A api_downloadsCache
		
		local line
		local -i lineNumber=0
		
		# Execute command line first if present
		if [ ${#commandLineArgs[@]} -ne 0 ]; then
			
			captures[${lineNumber}]='/dev/null'
			downloads[${lineNumber}]='/dev/null'
			
			"${commandLineArgs[@]}"
			
			lineNumber=$((lineNumber+1))
			
		fi
		
		cat "$switch_commandFile" | while IFS= read -r line
		do
			captures[${lineNumber}]='/dev/null'
			downloads[${lineNumber}]='/dev/null'
			
			eval "${line}"
			
			lineNumber=$((lineNumber+1))
			
		done
	)
}
main_functions+=(main_executeCommands)

function main_executeMainFunctions()
{
	local main_function
	for main_function in "${main_functions[@]}"
	do
		informationMessage INFO "${main_function}"
		$main_function
	done
}
