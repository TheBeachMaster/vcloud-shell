api_commands=()

function api()
{
	if [ $# -lt 2 ]; then
		informationMessage FAIL "api $api_format must specify <format> <action>"
	fi
	local api_format="$1"
	local -r apiCommand="$2"
	shift 2
	
	api_command_${apiCommand} "$@"
	
	download="${downloads[$downloadNumber]}"
	downloadNumber=$((downloadNumber+1))
}
api_commands+=(api)

api_format=xml
function format()
{
	if [ $# -lt 3 ]; then
		informationMessage FAIL "format must specify <format> <with-header> <action>"
	fi
	local api_format="$1"
	local -r formatCommand="$2"
	shift 2
	
	local curl_downloadFilePath
	for curl_downloadFilePath in "$@"
	do
		if [ "$curl_downloadFilePath" = "/dev/null" ]; then
			continue
		fi
		api_format_${formatCommand}
	done
}
api_commands+=(format)

function reset()
{
	local key
	for key in "${!api_downloadsCache[@]}"
	do
		unset api_downloadsCache["${key}"]
	done
}
api_commands+=(reset)

function cached()
{
	# pass function name, arguments
	echo -n "${api_downloadsCache["$(api_call_cache_key "$@")"]}"
}
api_commands+=(cached)
